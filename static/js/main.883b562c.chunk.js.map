{"version":3,"sources":["images/bg.jpg","fonts/AkbarPlain.eot","fonts/AkbarPlain.woff","fonts/AkbarPlain.woff2","components/globalStyle/GlobalStyle.js","images/homer.png","images/rotatedevice.gif","components/quotes/Quotes.js","components/button/Button.js","mock.js","services/quoteServices/quoteServices.js","sounds/ohSure.mp3","pages/app/App.js","index.js"],"names":["GloabalStyle","createGlobalStyle","simpsonFontEot","simpsonFontWoff","simpsonFontWoff2","bgImg","Quotes","quote","speaker","onUpdate","Wrapper","Quote","Speaker","Button","onClick","styled","div","p","button","mock","getQuote","JSON","stringify","rnd","Math","floor","random","Mock","length","rndMock","audio","Audio","ohSureSound","App","isMounted","useRef","useState","quoteState","setQuoteState","retorno","parse","current","play","useEffect","Content","HomerImg","alt","homerImg","orientationImg","rootElement","document","getElementById","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.883b562c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.1781bbd1.jpg\";","export default __webpack_public_path__ + \"static/media/AkbarPlain.7f50f3e2.eot\";","export default __webpack_public_path__ + \"static/media/AkbarPlain.1b5f80e4.woff\";","export default __webpack_public_path__ + \"static/media/AkbarPlain.c9102620.woff2\";","import {createGlobalStyle} from 'styled-components';\r\nimport bgImg from '../../images/bg.jpg';\r\nimport simpsonFontEot from '../../fonts/AkbarPlain.eot';\r\nimport simpsonFontWoff from '../../fonts/AkbarPlain.woff';\r\nimport simpsonFontWoff2 from '../../fonts/AkbarPlain.woff2';\r\n\r\nexport const GloabalStyle=createGlobalStyle`\r\n  @font-face{\r\n    font-family:'Simpsons-Font';\r\n    src:url(${simpsonFontEot});\r\n    src:url(${simpsonFontWoff}) format('woff2'),\r\n        url(${simpsonFontWoff2}) format('woff');\r\n  }\r\n\r\n  body{\r\n    background: url(${bgImg}) center no-repeat;  \r\n    background-size: cover;\r\n    color:#332c36;\r\n    passinf:0;\r\n    margin:0;\r\n    font-family:Simpsons-Font, serife;\r\n  }\r\n\r\n  @media only screen and (orientation:portrait){\r\n    body {\r\n      height: 50vw;\r\n      background:none;\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/homer.32492859.png\";","export default __webpack_public_path__ + \"static/media/rotatedevice.2af7be65.gif\";","import styled from 'styled-components';\r\nimport {string, func} from 'prop-types';\r\nimport {Button} from '../../components';\r\n\r\nexport const Quotes=({quote, speaker, onUpdate})=>{\r\n  return(\r\n    <Wrapper>\r\n      <Quote>{quote}</Quote>\r\n      <Speaker>{speaker}</Speaker>\r\n      <Button onClick={onUpdate}>Soltar Pérola</Button>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nQuotes.propTypes={\r\n  quote:string,\r\n  speaker:string,\r\n  onUpdate:func\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n  flex:1;\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  @media only screen and (orientation:portrait){\r\n    display:none;\r\n  }\r\n`;\r\n\r\nconst Quote=styled.p`\r\n  font-size:1.3em;\r\n  background:#ffffffb3;\r\n  padding:10px;\r\n  border-radius:7px;\r\n  marging:0;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Speaker=styled(Quote)`\r\n  text-align:right;\r\n  maring-botton:50px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Button=styled.button`\r\n  background:#ffd322;\r\n  color:black;\r\n  border:nome;\r\n  border-radius:0;\r\n  font-size:1.5em;\r\n  padding:10px;\r\n  cursor:pointer;\r\n  box-shadow:#333 3px 3px;\r\n  font-family:Simpsons-Font, serife;\r\n\r\n  &:hover &:active{\r\n    background-color: #d4ae7d;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n`;","const mock=[\r\n  {speaker:\"Homer Simpson\",quote:\"Ao álcool... A causa e solução de todos os problemas.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Se alguma coisa está difícil de ser feita, é porque não é para ser feita!.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Crianças, vocês tentaram e falharam miseravelmente. A lição é: nunca tente.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Oh não, alienígenas espaciais! Por favor, não me comam! Eu tenho mulher e filhos. Comam eles!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Eu tenho três filhos e nenhum dinheiro. Por que eu não posso ter nenhum filho e três dinheiros?\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Pessoas inventam estatísticas para provar qualquer coisa. 14% das pessoas sabem disso\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Bart, diferente do amor, o respeito não pode ser comprado\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Não importa o quão bom você é em alguma coisa. Existem mais ou menos 1 milhão de pessoas melhores do que você fazendo a mesma coisa\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Nunca diga qualquer coisa a não ser que tenha certeza de que todo mundo pensa o mesmo\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Chorar não vai trazer de volta seu cão, a não ser que suas lágrimas tenham cheiro de ração\"},\r\n  {speaker:\"Homer Simpson\",quote:\"As respostas para todos os problemas da vida não estão no fundo de uma garrafa. Estão na TV!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Só porque eu não me importo não significa que eu não entenda\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Lisa, se você não gosta do seu emprego, você não faz uma greve! Você vai lá todo dia e faz seu trabalho malfeito! Esse é o ‘Jeito Americano’!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Filho, se você realmente quer algo nesta vida, você tem que trabalhar para isso. Agora, quieto! Eles vão anunciar os números da loteria\"},\r\n  {speaker:\"Homer Simpson\",quote:\"E olha que eu não sou uma pessoa que se impressiona facilmente... Hey, olhe, um carro azul!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Filho, essas são as 3 frases que o farão passar pela vida: - Pega isso aí­ pra mim. - Boa idéia, patrão! - Já estava assim quando eu cheguei.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Você pode ter todo o dinheiro do mundo, mas há algo que jamais poderá comprar: um dinossauro!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Ora, Marge, se Deus não quisesse que a gente comesse na igreja, não teria colocado a gula como pecado?\"},\r\n  {speaker:\"Homer Simpson\",quote:\"A culpa é minha, eu coloco ela em quem eu quiser.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Deus é o personagem de ficção que eu mais gosto!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Meu segundo nome é Paciência, e o primeiro é Sem.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Eu não sou um cara mal, eu trabalho duro e amo meus filhos. Então por que eu deveria perder metade do meu domingo ouvindo como eu vou pro inferno?!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Gostaria que Deus estivesse vivo para ver isto!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Não costumo ser um homem religioso, mas se tu estás lá em cima, me salva, SUPER-HOMEM!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Eu não estava mentindo! Estava escrevendo ficção com a boca.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Preguiça é o ato de descansar, antes de estar cansado!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"A TV me respeita. Ela ri comigo e não de mim.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Existem três jeitos de fazer as coisas: o jeito certo, o jeito errado, e o meu jeito, que é igual ao jeito errado, só que mais rápido.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Eu não bebo água… os peixes transam nela.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Se um dia você perder o controle, levante-se e troque o canal manualmente.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Tentar é o primeiro passo rumo ao fracasso.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"O casamento é o caixão, os filhos são os pregos.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Sair de casa pra que? De qualquer jeito vou acabar voltando pra cá!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Bart, com US$ 10.000 vamos ficar milionários. Poderemos comprar todo tipo de coisas úteis como… Amor.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Não se pode culpar constantemente. Culpe-se só uma vez e vá em frente.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Quando vejo crianças a sorrir, já sei que estão aprontando alguma coisa.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Passei a detestar minha propria criaçao, agora sei como Deus se sente.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"A vingança é um prato que se come três vezes ao dia.\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Se você não faz parte da solução, faz parte do problema!!!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Se não pode ajudar, atrapalhe, o importante é participar!\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Por que as coisas que acontecem com gente burra ficam acontecendo comigo?\"},\r\n  {speaker:\"Homer Simpson\",quote:\"Deus, se quiseres que eu coma as oferendas não se manifeste de nenhuma maneira... ... Tua vontade será feita...\"}\r\n];\r\n\r\nexport default mock;","//export const getQuote=()=>fetch(process.env.REACT_APP_API).then((response)=>response.json());\r\n\r\n//Código implementado para o app funcionar sem um servidor de api.\r\nimport Mock from '../../mock';\r\n\r\nconst rndMock=()=>{\r\n  let rnd=Math.floor(Math.random()*Mock.length);\r\n  return Mock[rnd];\r\n}\r\n\r\nexport const getQuote= ()=>JSON.stringify(rndMock());","export default __webpack_public_path__ + \"static/media/ohSure.b503f576.mp3\";","import {useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport homerImg from '../../images/homer.png';\r\nimport orientationImg from '../../images/rotatedevice.gif';\r\nimport {Quotes} from '../../components';\r\nimport {getQuote} from '../../services';\r\nimport ohSureSound from '../../sounds/ohSure.mp3';\r\n\r\nconst audio=new Audio(ohSureSound);\r\n\r\nexport function App(){\r\n  let isMounted=useRef(true);\r\n\r\n  const [quoteState, setQuoteState]=useState({\r\n    quote:'Carregando pérola...',\r\n    speaker:'Carregando autor...'\r\n  });\r\n\r\n  const onUpdate=async ()=>{\r\n    //const quote=await getQuote();\r\n\r\n    //*implementação sem servidor api\r\n    const retorno=await getQuote();\r\n    const quote=JSON.parse(retorno);\r\n    //fim implementação\r\n    \r\n    if(isMounted.current){\r\n      audio.play();\r\n      setQuoteState(quote);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    onUpdate();\r\n\r\n    return ()=>{\r\n      isMounted.current=false;\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n    <Content>\r\n      <Quotes {...quoteState} onUpdate={onUpdate}/>\r\n      <HomerImg alt='Imagem do personagem'></HomerImg>\r\n    </Content>\r\n  )\r\n}\r\n\r\nconst Content=styled.div`\r\n  height:100vh;\r\n  padding:0 50px;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  @media only screen and (orientation:portrait){\r\n    flex-direction:column;\r\n    align-itens:center;\r\n  }\r\n`;\r\n\r\nconst HomerImg=styled.div`\r\n  height:100vh;\r\n  width:50vh;\r\n  background: url(${homerImg}) center no-repeat; \r\n  background-size: contain;\r\n\r\n  @media only screen and (orientation:portrait){\r\n    height:50vh;\r\n    width:50vh;\r\n    background: url(${orientationImg}) center no-repeat; \r\n    background-size: cover;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { GloabalStyle } from './components/globalStyle/GlobalStyle';\r\nimport {App} from './pages';\r\n\r\nconst rootElement=document.getElementById('root');\r\n\r\nReactDom.render(\r\n  <React.StrictMode>\r\n    <GloabalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}